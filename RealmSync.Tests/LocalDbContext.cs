using System.Data.Entity;
using Realmius.Server.Models;
using Realmius.Server.ServerConfiguration;
using Realmius.Tests.Server;
using Realmius.Tests.Server.Models;

namespace Realmius.Tests
{
    public class LocalDbContext : ChangeTrackingDbContext
    {
        static LocalDbContext()
        {
            Database.SetInitializer<LocalDbContext>(new DropCreateDatabaseAlways<LocalDbContext>());
        }

        public LocalDbContext(IRealmSyncServerDbConfiguration config) : base(config)
        {
        }

        public DbSet<DbSyncObject> DbSyncObjects { get; set; }
        public DbSet<UnknownSyncObjectServer> UnknownSyncObjectServers { get; set; }
        public DbSet<DbSyncObjectWithIgnoredFields> DbSyncObjectWithIgnoredFields { get; set; }
        public DbSet<IdIntObject> IdIntObjects { get; set; }
        public DbSet<IdIntAutogeneratedObject> IdIntAutogeneratedObjects { get; set; }
        public DbSet<IdGuidObject> IdGuidObjects { get; set; }
        public DbSet<UploadTests.IntFieldSentAsStringObject> IntFieldSentAsStringObjects { get; set; }
        public DbSet<RefSyncObject> RefSyncObjects { get; set; }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Entity<RefSyncObject>().HasMany(x => x.References).WithMany();
        }
    }
}